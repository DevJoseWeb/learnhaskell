title:O que eu preciso para embarcar nessa
text: Um editor de texto e um compilador Haskell. Provavelmente você já tem seu editor de texto favorito instalado então não perca tempo com isso. Os dois principais compiladores Haskell no momento são GHC (Glasgow Haskell Compiler) e Hugs. Neste tutorial iremos usar o GHC. Eu não irei entrar em detalhes de instalação. No windows é só baixar um instalador e clickar em "Next" diversas vezes até reiniciar seu computador. No linux em distribuições baseadas em Debian basta você dar um [code]apt-get install ghc6 libghc6-mtl-dev[/code] e você já estará rindo. Eu não tenho um Mac mas ouvi dizer que se você tiver MacPorts, você pode obter o GHC digitando [code]sudo port install ghc[/code]. Além disso, também acho que você pode desenvolver em Haskell com aquele mouse desagradável usando apenas um botão, mas não estou bem certo disso.

GHC can take a Haskell script (they usually have a .hs extension) and compile it but it also has an interactive mode which allows you to interactively interact with scripts. Interactively. You can call functions from scripts that you load and the results are displayed immediately. For learning it's a lot easier and faster than compiling every time you make a change and then running the program from the prompt. The interactive mode is invoked by typing in <span class="fixed">ghci</span> at your prompt. If you have defined some functions in a file called, say, [code]myfunctions.hs[/code], you load up those functions by typing in [code]:l myfunctions[/code] and then you can play with them, provided [code]myfunctions.hs[/code] is in the same folder from which [code]ghci[/code] was invoked. If you change the .hs script, just run [code]:l myfunctions[/code] again or do [code]:r[/code], which is equivalent because it reloads the current script. The usual workflow for me when playing around in stuff is defining some functions in a .hs file, loading it up and messing around with them and then changing the .hs file, loading it up again and so on. This is also what we'll be doing here.
